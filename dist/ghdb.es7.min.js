class GHDB{constructor(a,b,c,d){this.repo=a,this.file=b,this.commiter=c,this.token=d}get genString(){return`https://api.github.com/repos/${this.repo}/contents/${this.file}`}get import(){return new Promise((a,b)=>{fetch(this.genString).then((a)=>a.json()).then((c)=>{c.message&&b("Error somewhere. Check token or if the file exist"),a(c)})})}push(a,b=!1,c="",d="GitHubDB update"){return new Promise((e,f)=>{const g=new Headers({Authorization:`token ${this.token}`});fetch(this.genString,{method:"PUT",headers:g,body:`
				{
					"message": "${d}",
					"commiter": {
						"name": "${this.commiter.name}",
						"email": "${this.commiter.email}",
					},
					content: "${!1==b?window.btoa(unescape(encodeURIComponent(JSON.stringify(a)))):a}",
					"sha": "${c}"
				}
				`}).then((a)=>a.json()).then((a)=>{a.message&&f("Error somewhere. Check token or if the file exist"),e(a)})})}}"function"==typeof define&&define.amd?define(()=>new GHDB):"undefined"==typeof exports?"undefined"!=typeof global&&(global.GHDB=new GHDB):("undefined"!=typeof module&&module.exports&&(exports=module.exports=new GHDB),exports.GHDB=new GHDB);