"use strict";var _createClass=function(){function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var GHDB=function(){function r(t,e,n,o){_classCallCheck(this,r),this.repo=t,this.file=e,this.commiter=n,this.token=o}return _createClass(r,[{key:"push",value:function(o){var r=this,i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"",s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"GitHubDB update";return new Promise(function(e,n){var t=new Headers({Authorization:"token "+r.token});fetch(r.genString,{method:"PUT",headers:t,body:'\n\t\t\t\t{\n\t\t\t\t\t"message": "'+s+'",\n\t\t\t\t\t"commiter": {\n\t\t\t\t\t\t"name": "'+r.commiter.name+'",\n\t\t\t\t\t\t"email": "'+r.commiter.email+'",\n\t\t\t\t\t},\n\t\t\t\t\tcontent: "'+(0==blob?window.btoa(unescape(encodeURIComponent(JSON.stringify(o)))):o)+'",\n\t\t\t\t\t"sha": "'+i+'"\n\t\t\t\t}\n\t\t\t\t'}).then(function(t){return t.json()}).then(function(t){t.message&&n("Error somewhere. Check token or if the file exist"),e(t)})})}},{key:"genString",get:function(){return"https://api.github.com/repos/"+this.repo+"/contents/"+this.file}},{key:"import",get:function(){var t=this;return new Promise(function(e,n){fetch(t.genString).then(function(t){return t.json()}).then(function(t){t.message&&n("Error somewhere. Check token or if the file exist"),e(t)})})}}]),r}();"function"==typeof define&&define.amd?define(function(){return new GHDB}):"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=new GHDB),exports.GHDB=new GHDB):"undefined"!=typeof global&&(global.GHDB=new GHDB);